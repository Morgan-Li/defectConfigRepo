<server description="erwwLibertyServer">
	<!-- Enable features for Java EE10 -->
	<featureManager>
		<feature>appSecurity-4.0</feature>
		<feature>batch-2.0</feature>
		<feature>beanValidation-3.0</feature>
		<feature>cdi-3.0</feature>
		<feature>concurrent-2.0</feature>
		<feature>enterpriseBeans-4.0</feature>
		<feature>enterpriseBeansRemote-4.0</feature>
		<feature>expressionLanguage-4.0</feature>
		<feature>faces-3.0</feature>
		<feature>jdbc-4.2</feature>
		<feature>jndi-1.0</feature>
		<feature>jsonp-2.0</feature>
		<feature>ldapRegistry-3.0</feature>
		<!-- Disable localConnector since it's not supported for easej
		<feature>localConnector-1.0</feature>
		-->
		<feature>mdb-4.0</feature>
		<feature>wmqMessagingClient-3.0</feature>
		<feature>messagingSecurity-3.0</feature>
		<feature>monitor-1.0</feature>
		<feature>pages-3.0</feature>
		<feature>persistence-3.0</feature>
		<feature>requestTiming-1.0</feature>
		<feature>restConnector-2.0</feature>
		<feature>restfulWS-3.0</feature>
		<feature>servlet-5.0</feature>
		<feature>sessionDatabase-1.0</feature>
		<feature>ssl-1.0</feature>
		<feature>webCache-1.0</feature>
		<feature>websocket-2.0</feature>
		<feature>wsSecurity-1.1</feature>
		<feature>xmlBinding-3.0</feature>
		<feature>xmlWS-3.0</feature>
	</featureManager>
	
	<!-- Default configuration assumes that configuration is on distributed -->
	<!-- and uses embedded messaging and LDAP security.  If on zOS or if    -->
	<!-- wanting a different configuration, then sections below will need   -->
	<!-- to be commented out and other sections will need to be uncommented -->
	<!-- Plus the variables section should be updated to match the desired  -->
	<!-- configuration.                                                     -->
	
	<!-- Variables that should be set to match your environment -->
	<variable name="mqttHost" value="messagesight.demos.ibm.com" />
	<variable name="mqttPort" value="1883" />
	<variable name="rtcommTopicPath" value="/erwwLite/" />
	<variable name="rtcommTopic" value="erwwLite" />
	<variable name="httpPort" value="9080" />
	<variable name="httpsPort" value="9443" />
	<variable name="iiopPort" value="9501" />
	<variable name="iiopsPort" value="9601" />
	<variable name="cloneId" value="server1" />
	<variable name="dbName" value="ERWW" />
	<variable name="dbUser" value="db2inst1" />
	<variable name="dbPassword" value="db2passw0rd" />
	<variable name="dbHost" value="easej-svt-vm.purple-mystic-butterfly.com" />
	<variable name="dbPort" value="60020" />
	<variable name="dbSQLID" value="CBIVP" />
	<variable name="jdbcLibPath" value="${shared.resource.dir}/db2jars" />
	<variable name="jdbcPath" value="/usr/lpp/db2/db2v11/jdbc" /> <!-- zOS specific -->
	<variable name="jmsPort" value="7301" />
	<variable name="jmsSSLPort" value="7401" />
	<variable name="jmsUser" value="admin" />
	<variable name="jmsPassword" value="mqpassw0rd" />
	<variable name="mqHost" value="easej-svt-vm.purple-mystic-butterfly.com" />
	<variable name="mqPort" value="1414" />
	<variable name="mqChannel" value="DEV.ADMIN.SVRCONN" />
	<variable name="mqQueueManager" value="QM1" />
	<variable name="ldapHost" value="easej-svt-vm.purple-mystic-butterfly.com" />
	<variable name="ldapPort" value="9389" />
	<variable name="ldapBackupHost" value="isdsldap11.fyre.ibm.com" />
	<variable name="ldapBackupPort" value="9389" />
	<variable name="ldapBaseDN" value="o=ibm,c=us" />
	<variable name="ldapType" value="IBM Tivoli Directory Server" />
	<variable name="wsUser" value="user1" />
	<variable name="wsPassword" value="{xor}LDo8Ki02KyY=" />
	<variable name="clientEarName" value="ERWW_Lite_WS_Client_EE10.ear" />
	<variable name="erwwEarName" value="ERWW_Lite.ear" />
	<variable name="jdbcLibraryName" value="DB2JCC4LIB" /> <!-- other valid value is DB2T2LibRef and is for zOS DB2 type 2 -->
	
	<!-- Common configuration for server -->
	<executor id="default" coreThreads="300" maxThreads="2000" keepAlive="60s" stealPolicy="STRICT" rejectedWorkPolicy="CALLER_RUNS" />

	<!-- Disable httpEndpoint as easej provides it's own configuration
	<httpEndpoint host="*" httpPort="${httpPort}" httpsPort="${httpsPort}" id="defaultHttpEndpoint">
		<tcpOptions soReuseAddr="true" inactivityTimeout="1200s"/>
		<httpOptions persistTimeout="1200s" readTimeout="1200s" writeTimeout="1200s" maxKeepAliveRequests="-1"/>
	</httpEndpoint>
	-->
	
	<iiopEndpoint id="myIiopEndpoint" iiopPort="${iiopPort}">
		<iiopsOptions iiopsPort="${iiopsPort}" sslRef="defaultSSLConfig" />
	</iiopEndpoint>
	
	<orb id="defaultOrb" iiopEndpointRef="myIiopEndpoint" />

	<httpSession cloneId="${cloneId}" invalidationTimeout="180" invalidateOnUnauthorizedSessionRequestException="true"/>
	
	<transaction totalTranLifetimeTimeout="600s" propogatedOrBMTTranLifetimeTimeout="600s" clientInactivityTimeout="600s" />
	
	<requestTiming hungRequestThreshold="10m" slowRequestThreshold="5m"/>

	<!-- disable applicationMonitor as easej provides it's own configuration
	<applicationMonitor updateTrigger="mbean"/>
	-->
	
	<jndiEntry id="mqttHost" jndiName="mqttHost" value="${mqttHost}"/>
	<jndiEntry id="mqttPort" jndiName="mqttPort" value="${mqttPort}"/>
	<jndiEntry id="rtcommTopicPath" jndiName="rtcommTopicPath" value="${rtcommTopic}"/>
	
	<!-- DB2 distributed configuration -->
	<connectionManager id="CM_ERWWDataSourceWithPwd" maxPoolSize="600" minPoolSize="1" connectionTimeout="300s" reapTime="30" maxIdleTime="-1" agedTimeout="85" />
	<connectionManager id="CM_ERWWDataSourceWithJaasAlias" maxPoolSize="600" minPoolSize="1" connectionTimeout="300s" reapTime="30" maxIdleTime="-1" agedTimeout="85" />
	<!-- Use easej configuration
	<jdbcDriver id="myJDBCDriver" libraryRef="DB2JCC4LIB"/>
	<library apiTypeVisibility="spec,ibm-api,third-party" filesetRef="db2jcc4" id="DB2JCC4LIB"/>
	<fileset dir="${shared.resource.dir}/db2jars" id="db2jcc4" includes="db2jcc4.jar db2jcc_license_cu.jar"/>
	-->
	<include location="${shared.resource.dir}/ease/db2/jdbc4.xml"/>
	
	<dataSource id="ERWWDataSourceWithPwd" isolationLevel="TRANSACTION_READ_COMMITTED" jdbcDriverRef="ease.db2jcc4" jndiName="jdbc/ERWWDataSourceWithPwd" type="javax.sql.XADataSource" connectionManagerRef="CM_ERWWDataSourceWithPwd" statementCacheSize="100">
		<properties.db2.jcc currentSchema="${dbSQLID}" databaseName="${dbName}" driverType="4" password="${dbPassword}" portNumber="${dbPort}" serverName="${dbHost}" traceLevel="-1" user="${dbUser}" allowNextOnExhaustedResultSet="1"/>
	</dataSource>
	<dataSource containerAuthDataRef="DBConnectionAlias" id="ERWWDataSourceWithJaasAlias" isolationLevel="TRANSACTION_READ_COMMITTED" jdbcDriverRef="ease.db2jcc4" jndiName="jdbc/ERWWDataSourceWithJaasAlias" type="javax.sql.XADataSource" connectionManagerRef="CM_ERWWDataSourceWithJaasAlias">
		<properties.db2.jcc currentSchema="${dbSQLID}" databaseName="${dbName}" driverType="4" portNumber="${dbPort}" serverName="${dbHost}" allowNextOnExhaustedResultSet="1"/>
	</dataSource>
	<dataSource id="DefaultDataSource" jdbcDriverRef="ease.db2jcc4" jndiName="jdbc/DefaultDataSource" type="javax.sql.XADataSource">
		<properties.db2.jcc databaseName="${dbName}" driverType="4" password="${dbPassword}" portNumber="${dbPort}" serverName="${dbHost}" useTransactionRedirect="true" user="${dbUser}" allowNextOnExhaustedResultSet="1"/>
	</dataSource>
	
	<managedScheduledExecutorService jndiName="concurrent/ERWWManagedScheduledExecutor">
		<contextService>
			<classloaderContext/>
			<jeeMetadataContext/>
			<securityContext/>
		</contextService>
	</managedScheduledExecutorService>
	
	<!-- Common JMS Configuration -->
	<connectionManager id="PriceChange_CM" minPoolSize="1" maxPoolSize="400"/>
	<connectionManager id="Delivery_CM" minPoolSize="1" maxPoolSize="400"/>
	<connectionManager id="Monitor1.0_CM" minPoolSize="1" maxPoolSize="400"/>
	<connectionManager id="Monitor1.1_CM" minPoolSize="1" maxPoolSize="400"/>
	<connectionManager id="NewOrder_CM" minPoolSize="1" maxPoolSize="400"/>
  
	<!-- MQ Configuration, uncomment section to use MQ instead -->
	<!-- of embedded and comment embedded JMS section.         -->
	<!-- Note:  All physical resources in the actual messaging -->
	<!-- engine are named "MQ_xxx" below to make it clear they -->
	<!-- are the real resources in the messaging engine, as    -->
	<!-- opposed to the JEE "logical" resources defined below  -->
	<!-- that map the application to these resources.          -->
	<!-- Comment out either the CLIENT lines or the BINDINGS   -->
	<!-- lines depending on configuration.                     -->

	<include location="${shared.resource.dir}/ease/mq/jakarta-ra.xml"/>
	
	<jmsQueueConnectionFactory jndiName="jms/PriceChangeQueueCF" connectionManagerRef="PriceChange_CM" containerAuthDataRef="JMSConnectionAlias">
		<properties.wmqJms transportType="CLIENT" hostName="${mqHost}" port="${mqPort}" channel="${mqChannel}" queueManager="${mqQueueManager}" />
	</jmsQueueConnectionFactory>
	<jmsQueue id="PriceChangeRequestQ" jndiName="jms/PriceChangeRequestQ">
		<properties.wmqJms baseQueueName="MQ_PriceChangeRequestQ" />
	</jmsQueue>
	<jmsQueue id="PriceChangeReplyQ" jndiName="jms/PriceChangeReplyQ">
		<properties.wmqJms baseQueueName="MQ_PriceChangeReplyQ" />
	</jmsQueue>
	<jmsActivationSpec id="jms/PriceChangeActivationSpec" authDataRef="JMSConnectionAlias">
		<properties.wmqJms destinationRef="PriceChangeRequestQ" maxPoolDepth="200" transportType="CLIENT" queueManager="${mqQueueManager}" hostName="${mqHost}" channel="${mqChannel}" port="${mqPort}"/>
	</jmsActivationSpec>
	
	<jmsQueueConnectionFactory jndiName="jms/DeliveryQueueCF" connectionManagerRef="Delivery_CM" containerAuthDataRef="JMSConnectionAlias">
		<properties.wmqJms transportType="CLIENT" hostName="${mqHost}" port="${mqPort}" channel="${mqChannel}" queueManager="${mqQueueManager}" />
	</jmsQueueConnectionFactory>
	<jmsTopicConnectionFactory jndiName="jms/DeliveryTopicCF" containerAuthDataRef="JMSConnectionAlias" >
		<properties.wmqJms transportType="CLIENT" hostName="${mqHost}" port="${mqPort}" channel="${mqChannel}" queueManager="${mqQueueManager}" />
	</jmsTopicConnectionFactory>
	<jmsQueue id="DeliveryRequestQ" jndiName="jms/DeliveryRequestQ">
		<properties.wmqJms baseQueueName="MQ_DeliveryRequestQ" />
	</jmsQueue>
	<jmsTopic id="DeliveryLogTopic" jndiName="jms/DeliveryLogTopic">
		<properties.wmqJms baseTopicName="MQ_DeliveryLogTopic" />
	</jmsTopic>
	<jmsActivationSpec id="jms/DeliveryActivationSpec" authDataRef="JMSConnectionAlias">
		<properties.wmqJms destinationRef="DeliveryRequestQ" maxPoolDepth="200" transportType="CLIENT" queueManager="${mqQueueManager}" hostName="${mqHost}" channel="${mqChannel}" port="${mqPort}" />
	</jmsActivationSpec>
	
	<jmsConnectionFactory jndiName="jms/NewOrderCF" connectionManagerRef="NewOrder_CM">
		<properties.wmqJms transportType="CLIENT" hostName="${mqHost}" port="${mqPort}" channel="${mqChannel}" queueManager="${mqQueueManager}" />
	</jmsConnectionFactory>
	<jmsQueue id="NewOrderRequestQ" jndiName="jms/NewOrderRequestQ">
		<properties.wmqJms baseQueueName="MQ_NewOrderRequestQ" />
	</jmsQueue>
	<jmsQueue id="NewOrderReplyQ" jndiName="jms/NewOrderReplyQ">
		<properties.wmqJms baseQueueName="MQ_NewOrderReplyQ" />
	</jmsQueue>
	<jmsTopic id="NewOrderLogTopic" jndiName="jms/NewOrderLogTopic">
		<properties.wmqJms baseTopicName="MQ_NewOrderLogTopic" />
	</jmsTopic>
	<jmsActivationSpec id="jms/NewOrderActivationSpec" authDataRef="JMSConnectionAlias">
		<properties.wmqJms destinationRef="NewOrderRequestQ" maxPoolDepth="200" transportType="CLIENT" queueManager="${mqQueueManager}" hostName="${mqHost}" channel="${mqChannel}" port="${mqPort}" />
	</jmsActivationSpec>
	
	<jmsQueueConnectionFactory jndiName="jms/MonitorQueueCF1.0" connectionManagerRef="Monitor1.0_CM">
		<properties.wmqJms userName="${jmsUser}" password="${jmsPassword}" transportType="CLIENT" hostName="${mqHost}" port="${mqPort}" channel="${mqChannel}" queueManager="${mqQueueManager}" />
	</jmsQueueConnectionFactory>
	<jmsQueue id="MonitorQ1.0" jndiName="jms/MonitorQ1.0">
		<properties.wmqJms baseQueueName="MQ_MonitorQ1.0" />
	</jmsQueue>
	<jmsActivationSpec id="jms/WebSocketsMonitorActiviationSpec1.0" authDataRef="JMSConnectionAlias">
		<properties.wmqJms destinationRef="MonitorQ1.0" maxPoolDepth="200" transportType="CLIENT" queueManager="${mqQueueManager}" hostName="${mqHost}" channel="${mqChannel}" port="${mqPort}"/>
	</jmsActivationSpec>

	<jmsQueueConnectionFactory jndiName="jms/MonitorQueueCF1.1" connectionManagerRef="Monitor1.1_CM">
		<properties.wmqJms userName="${jmsUser}" password="${jmsPassword}" transportType="CLIENT" hostName="${mqHost}" port="${mqPort}" channel="${mqChannel}" queueManager="${mqQueueManager}" />
	</jmsQueueConnectionFactory>
	<jmsQueue id="MonitorQ1.1" jndiName="jms/MonitorQ1.1">
		<properties.wmqJms baseQueueName="MQ_MonitorQ1.1" />
	</jmsQueue>
	<jmsActivationSpec id="jms/WebSocketsMonitorActiviationSpec1.1" authDataRef="JMSConnectionAlias">
		<properties.wmqJms destinationRef="MonitorQ1.1" maxPoolDepth="200" transportType="CLIENT" queueManager="${mqQueueManager}" hostName="${mqHost}" channel="${mqChannel}" port="${mqPort}"/>
	</jmsActivationSpec>
  
	
	<!-- LDAP Configuration -->
	<ldapRegistry baseDN="${ldapBaseDN}" host="${ldapHost}" id="ldapConfig" ldapType="${ldapType}" port="${ldapPort}" reuseConnection="true">
		<!-- 
		<failoverServers name="tdir_backupserver">
			<server host="${ldapBackupHost}" port="${ldapBackupPort}" />
			</failoverServers>
		-->
	</ldapRegistry>
	
	<!-- Distributed SSL -->
	<!-- Disable keystore as easej provides it's own configuration
	<ssl id="defaultSSLConfig" keyStoreRef="defaultKeyStore" sslProtocol="TLSv1.2"/>
	<keyStore id="defaultKeyStore" password="{xor}Lz4sLCgwLTs="/>
	-->
	
	<!--  Basic Registry Security configuration -->
	<!-- 
	<basicRegistry id="BasicRealm" realm="BasicRealm">
		<user name="wsadmin" password="{xor}LDo8Ki02KyY="/>
		<user name="persona1" password="{xor}Ly86LSwwMT5u"/>
		<user name="persona11" password="{xor}Ly86LSwwMT5ubg=="/>
		<user name="persona21" password="{xor}Ly86LSwwMT5tbg=="/>
		<user name="user1" password="{xor}LDo8Ki02KyY="/>
		<user name="user11" password="{xor}LDo8Ki02KyY="/>
		<group name="g11-20">
			<member name="persona11"/>
		</group>
		<group name="group11">
			<member name="user11"/>
		</group>
	</basicRegistry>
	<administrator-role>
		<user>wsadmin</user>
	</administrator-role>
	-->

	<!-- Common security setup -->
	<authData id="JMSConnectionAlias" password="${jmsPassword}" user="${jmsUser}"/>
	<authData id="DBConnectionAlias" password="${dbPassword}" user="${dbUser}"/>
	<wsSecurityClient internal.properties="" ws-security.password="${wsPassword}" ws-security.username="${wsUser}"/>
	
	<!-- Enable for HTTP Session Persistence -->
	<!--
	<connectionManager id="sessPool" maxPoolSize="0" minPoolSize="1" connectionTimeout="3m"/>
	<dataSource id="SessionDS" jdbcDriverRef="myJDBCDriver" jndiName="jdbc/sessions" type="javax.sql.ConnectionPoolDataSource" connectionManagerRef="sessPool">
		<properties.db2.jcc driverType="4" databaseName="${dbName}" user="${dbUser}" password="${dbPassword}" currentSchema="${dbSQLID}" serverName="${dbHost}" portNumber="${dbPort}" />
	</dataSource> 
	<httpSessionDatabase id="SessionDB" dataSourceRef="SessionDS" tableName="SESSIONS" />
	 -->
 	
 	<!-- Application configuration -->

    <enterpriseApplication id="ERWW_Lite_WS_Client" location="${clientEarName}" name="ERWW_Lite_WS_Client"/>	

<!-- easej does not support multiple applications
    <enterpriseApplication id="ERWW_Lite" location="${erwwEarName}" name="ERWW_Lite">
        <classloader apiTypeVisibility="ibm-api,spec,third-party" /> 
    </enterpriseApplication>
  -->
</server>
